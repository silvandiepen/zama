@use 'sass:map';
@use 'sass:color';
@use 'sass:math';

// Accessible Color Combinations - Based on CSS-Tricks article
// https://css-tricks.com/programming-sass-to-create-accessible-color-combinations/

/// Returns the luminance of a given color
/// @param {Color} $color - The color to calculate luminance for
/// @return {Number} - The luminance value (0-1)
@function luminance($color) {
  $colors: (
    'red': color.channel($color, "red", $space: rgb),
    'green': color.channel($color, "green", $space: rgb),
    'blue': color.channel($color, "blue", $space: rgb)
  );

  @each $name, $value in $colors {
    $adjusted: 0;
    $value: math.div($value, 255);

    @if $value < 0.03928 {
      $value: math.div($value, 12.92);
    } @else {
      $value: math.div($value + 0.055, 1.055);
      $value: math.pow($value, 2.4);
    }

    $colors: map.merge($colors, ($name: $value));
  }

  @return (map.get($colors, 'red') * 0.2126) + (map.get($colors, 'green') * 0.7152) + (map.get($colors, 'blue') * 0.0722);
}

/// Returns the contrast ratio between two colors
/// @param {Color} $color1 - First color
/// @param {Color} $color2 - Second color
/// @return {Number} - The contrast ratio (1-21)
@function contrast-ratio($color1, $color2) {
  $l1: luminance($color1);
  $l2: luminance($color2);

  @if $l1 > $l2 {
    @return math.div($l1 + 0.05, $l2 + 0.05);
  } @else {
    @return math.div($l2 + 0.05, $l1 + 0.05);
  }
}

/// Determines if text color should be light or dark based on background
/// @param {Color} $background - The background color
/// @param {Color} $light - Light text color (default: white)
/// @param {Color} $dark - Dark text color (default: black)
/// @return {Color} - The appropriate text color
@function pick-text-color($background, $light: #ffffff, $dark: #000000) {
  $light-contrast: contrast-ratio($background, $light);
  $dark-contrast: contrast-ratio($background, $dark);

  @if $light-contrast > $dark-contrast {
    @return $light;
  } @else {
    @return $dark;
  }
}

/// Returns an accessible text color with better contrast than a threshold
/// @param {Color} $background - The background color
/// @param {Color} $color - The base text color
/// @param {Number} $threshold - Target contrast ratio (default: 4.5 for WCAG AA)
/// @return {Color} - The adjusted text color
@function get-contrast-color($background, $color, $threshold: 4.5) {
  $contrast: contrast-ratio($background, $color);

  @if $contrast >= $threshold {
    @return $color;
  }

  // Adjust the color until we reach the desired contrast
  $max-iterations: 50;
  $iteration: 0;
  
  @while $contrast < $threshold and $iteration < $max-iterations {
    $color: color.adjust(
      $color,
      $lightness: if(
        luminance($color) > luminance($background),
        -2%,  // Make darker
        2%    // Make lighter
      )
    );
    $contrast: contrast-ratio($background, $color);
    $iteration: $iteration + 1;
  }

  @return $color;
}